services:
  sonar:
    image: sonarqube:latest
    env_file:
      - .env
    container_name: sonar
    ports:
      - 9000:9000
    volumes:
      - sonar-data:/opt/sonarqube/data
      - sonar-extensions:/opt/sonarqube/extensions
      - sonar-logs:/opt/sonarqube/logs
      - sonar-conf:/opt/sonarqube/conf
  redis:
    image: redis:latest
    container_name: redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data
  psql:
    image: postgres:latest
    container_name: psql
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME}" ]
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - psql_volume:/var/lib/postgresql/data
#  server:
#    build:
#      context: .
#      dockerfile: main.Dockerfile
#    container_name: server
#    env_file:
#      - .env
#    environment:
#      - REDIS_HOST=redis
#      - DB_HOST=psql
#    ports:
#      - "8080:8080"
#    depends_on:
#      psql:
#        condition: service_healthy
#      redis:
#        condition: service_healthy

volumes:
  psql_volume:
  redis-data:
  sonar-data:
  sonar-extensions:
  sonar-logs:
  sonar-conf: